/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ((function(modules) {
	// Check all modules for deduplicated modules
	for(var i in modules) {
		if(Object.prototype.hasOwnProperty.call(modules, i)) {
			switch(typeof modules[i]) {
			case "function": break;
			case "object":
				// Module can be created from a template
				modules[i] = (function(_m) {
					var args = _m.slice(1), fn = modules[_m[0]];
					return function (a,b,c) {
						fn.apply(this, [a,b,c].concat(args));
					};
				}(modules[i]));
				break;
			default:
				// Module is a copy of another module
				modules[i] = modules[modules[i]];
				break;
			}
		}
	}
	return modules;
}([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(3);
	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ },
/* 1 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 2 */
1,
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === 'object') {
	    module.exports = factory;
	  } else {
	    root.socialButton = factory();
	  }
	})(this, function() {
	  'use strict';
	
	  var doc = document;
	
	  // Utils:
	  var fail = function(err) {
	    return console.log(err);
	  };
	
	  var existy = function (str) {
	    return str != null;
	  };
	
	  var truthy = function(str) {
	    return str !== false && existy(str);
	  };
	
	  var empty = function (str) {
	    return str.length === 0;
	  };
	
	  var valid = function (str) {
	    return truthy(str) && !empty(str);
	  };
	
	  // UI utils:
	  /**
	   * Append any number of child elements to a container element
	   * @param container
	   * @returns {appendToContainer}
	   */
	  var appendChilds = function appendChildren(container) {
	    return function appendToContainer() {
	      return Array.prototype.map.call(arguments, function (elem) {
	        container.appendChild(elem);
	      });
	    }
	  };
	
	  /**
	   * Set any number of attributes to a DOM element
	   * @param container
	   * @param attrs
	   * @returns {*}
	   */
	  var setAttributes = function(container, attrs) {
	    Object.keys(attrs).map(function (key) {
	      container.setAttribute(key, attrs[key]);
	    });
	
	    return container;
	  };
	
	  /**
	   * Create an element with a predefined class
	   * @param tag
	   * @param attrs
	   * @returns {Element}
	   */
	  var createElementWithClass = function (tag, attrs) {
	    var node = doc.createElement(tag);
	    setAttributes(node, attrs);
	    return node;
	  };
	
	  // API specific utils
	  var strategies = ["amazon", "aol", "baidu", "bitbucket", "dropbox", "ebay", "facebook", "google", "instagram", "linkedin", "github", "paypal", "salesforce", "shopify", "soundcloud", "renren", "exact", "twitter", "yandex", "thecity", "planningcenter", "thirtysevensignals", "fitbit", "wordpress", "yahoo", "box", "vkontakte", "dwolla", "miicard", "yammer", "weibo", "windows", "microsoft"];
	
	  var hasProp = function(props, prop) {
	    var hasStrategy;
	    if (props.hasOwnProperty(prop) && valid(props[prop])) {
	      if (prop === 'strategy') {
	        hasStrategy = strategies.indexOf(props[prop]) !== -1;
	
	        if (!hasStrategy) return fail('The strategy specified is not present');
	        return true;
	      }
	      return true;
	    }
	    return false;
	  };
	
	  var getContainer = function(container) {
	    var response;
	
	    if (container[0] === '#') {
	      response = doc.getElementById(container.slice(1));
	
	      if (!valid(response)) return fail('The id name is not valid');
	      return response;
	    }
	
	    if (container[0] === '.') {
	      response = doc.getElementsByClassName(container.slice(1))[0];
	
	      if (!valid(response)) return fail('The class name is not valid');
	      return response;
	    }
	
	    response = doc.getElementsByTagName(container)[0];
	
	    if (!valid(response)) return fail('The tag name is not valid');
	    return response;
	  };
	
	  var createButtonContainer = function(props) {
	    var hasBackground = props.hasOwnProperty('background');
	    var buttonAttrs = {
	      'data-provider': props.strategy,
	      'tabindex': 1,
	      'type': 'button',
	      'class': 'auth0-lock-social-button',
	    };
	
	    var buttonContainer = createElementWithClass('button', buttonAttrs);
	    if (hasBackground) {
	      buttonContainer = setAttributes(buttonContainer, {
	        style: 'background-color: ' + props.background,
	      });
	
	      return buttonContainer;
	    }
	
	    return buttonContainer;
	  };
	
	  var createIcon = function(props) {
	    var hasIcon = props.hasOwnProperty('icon');
	    var buttonIcon = createElementWithClass('div', {
	      class: 'auth0-lock-social-button-icon'
	    });
	
	    if (hasIcon) {
	      buttonIcon = setAttributes(buttonIcon, {
	        style: 'background-image: url(\'' + props.icon + '\')',
	        'background-size': '100%',
	      });
	
	      return buttonIcon;
	    }
	
	    return buttonIcon;
	  };
	
	  var createLabel = function(props) {
	    var hasLabel = props.hasOwnProperty('label');
	
	    var buttonLabel = createElementWithClass('div', {
	      class: 'auth0-lock-social-button-text',
	    });
	
	    var buttonInnerText = doc.createElement('span');
	    var buttonInnerStrategy = doc.createElement('span');
	
	    if (!hasLabel) {
	      buttonInnerText.innerText = 'Login with ';
	      buttonInnerStrategy.innerText = props.strategy;
	    }
	
	    if (hasLabel) {
	      buttonInnerText.innerText = props.label;
	    }
	
	    var container = appendChilds(buttonLabel);
	    container(buttonInnerText, buttonInnerStrategy);
	
	    return buttonLabel;
	  };
	
	  var createButton = function(props) {
	    var buttonContainer = createButtonContainer(props);
	    var buttonIcon = createIcon(props);
	    var buttonLabel = createLabel(props);
	
	    var container = appendChilds(buttonContainer);
	    container(buttonIcon, buttonLabel);
	
	    return buttonContainer;
	  };
	
	  // API
	  var socialButton = {};
	
	  /**
	   * Creates the social button
	   * @param props: Object.
	   */
	  socialButton.create = function(props) {
	    if (!hasProp(props, 'strategy') || !hasProp(props, 'container')) {
	      return fail('You need to specify a strategy and a container');
	    }
	
	    // Build button
	    var button = createButton(props);
	
	    // Append button to DOM
	    var container = getContainer(props.container);
	    container.appendChild(button);
	    return button;
	  };
	
	  return socialButton;
	});


/***/ }
/******/ ])));